# SPARC Memory-Enhanced System Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================
# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=false
RELOAD=false

# Application Metadata
APP_NAME=SPARC Memory-Enhanced API
APP_VERSION=2.0.0

# =============================================================================
# DATABASE CONFIGURATION (Traditional PostgreSQL)
# =============================================================================
DATABASE_URL=postgresql://postgres:password@localhost:5432/sparc_db
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30

# =============================================================================
# SUPABASE CONFIGURATION (Enhanced Memory Storage)
# =============================================================================
# Required for structured memory storage and cross-project insights
# Get these from your Supabase project: https://supabase.com/dashboard
SUPABASE_URL=your_supabase_project_url_here
SUPABASE_KEY=your_supabase_anon_key_here

# Example:
# SUPABASE_URL=https://abcdefghijklmnopqrstuvwxyz.supabase.co
# SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# =============================================================================
# QDRANT CONFIGURATION (Vector Database for Semantic Search)
# =============================================================================
# Required for semantic memory search and pattern matching
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_API_KEY=optional_api_key_for_cloud_qdrant

# For Qdrant Cloud (alternative to local):
# QDRANT_HOST=your-cluster-url.qdrant.io
# QDRANT_API_KEY=your_qdrant_cloud_api_key

# =============================================================================
# AI MODEL CONFIGURATION
# =============================================================================
# OpenAI API key for enhanced AI capabilities
OPENAI_API_KEY=your_openai_api_key_here

# Embedding model for semantic search (sentence-transformers model name)
EMBEDDING_MODEL=all-MiniLM-L6-v2

# =============================================================================
# SPARC MEMORY SYSTEM CONFIGURATION
# =============================================================================
# Default namespace for memory isolation
DEFAULT_NAMESPACE=sparc_default

# Memory system settings
MEMORY_RETENTION_DAYS=365
MAX_MEMORIES_PER_NAMESPACE=10000
QUALITY_THRESHOLD=0.6

# Learning system settings
LEARNING_RATE=0.1
MEMORY_ENHANCEMENT_ENABLED=true
CROSS_PROJECT_LEARNING_ENABLED=true

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
SECRET_KEY=your-secret-key-here-minimum-32-characters-change-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# QUICK SETUP NOTES
# =============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 2. Set up Supabase:
#    - Create account at https://supabase.com
#    - Create new project
#    - Copy URL and anon key to SUPABASE_URL and SUPABASE_KEY
# 3. Set up Qdrant:
#    - For local: docker run -p 6333:6333 qdrant/qdrant
#    - For cloud: Create account at https://qdrant.tech
# 4. Get OpenAI API key from https://platform.openai.com/api-keys
# 5. Run setup: python scripts/init_database.py
# 6. Test system: python test_memory_enhanced_sparc.py

# Copy this file to .env and update values for your environment
# Never commit .env files to version control
