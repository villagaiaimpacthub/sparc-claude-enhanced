What is Pheromind? (AI Dev Team Overview)
0:00
What you're looking at here, this is
0:02
Fairmind. This is an entire agentic dev
0:06
team. And what Fairmind does is it
0:09
manages the entire software development
0:13
cycle from initial planning and research
0:16
to building out the PRD to building out
0:19
the specs to developing the highle
0:21
testing strategy to entering in the
0:24
pseudo code to building the architecture
0:27
and it it manages the entire system and
How Pheromind Manages the Entire Software Lifecycle
0:31
Claude code is
0:34
the best coding system in exist.
0:36
distance. And so when you pair these two
0:39
together, what you get is
0:43
next level, right? This is the evolution
0:46
of coding right here. So claude code,
0:51
best coding system ever. What limits you
0:54
with cloud code? Oh, I don't know what
0:56
to type in. I don't know what prompt to
0:58
give it. Right? But fair mind, it it
1:01
doesn't matter what you want to build.
1:03
Anything in existence, it doesn't
1:04
matter. whatever your mind can possibly
1:06
dream up, right?
1:09
Fairmind will give the prompts. So
1:12
imagine like, okay, I want Claude code
Claude Code: The Best AI Coding System
1:15
to build this. It would be so nice if I
1:17
had the 500 perfect prompts I could feed
1:21
to Claude to get it to build exactly
1:24
what I want and what I intend to have
1:27
made. And like, how can I get Claude
1:29
code to build exactly anything I want to
1:31
make, everything in existence? And
1:33
that's what Fairmind does is it manages
1:36
the development process. It creates
1:38
prompts. You paste the prompts in like
1:41
you've seen I' I've done right here. And
1:43
then you let Claude Code do the task.
1:46
Once Claude Code finishes the task, then
1:49
you paste that back into Phramind and
Pheromindâ€™s Prompt Generation Superpower
1:52
then let Pheramine give you the next
1:54
prompt. And it does this all the way to
1:57
the end following the Spark workflow.
2:00
And I've also addressed the test
2:02
problem. Oracle, this is the issue of
2:04
the AI being able to create things that
2:07
align with what you intend to make. I've
2:09
done this by creating innovating in an
2:11
all new system called a behavior model
2:14
oracle. And what this is is this is the
2:16
foundation for ID. This is another thing
2:19
that I invented. None of this existed
2:21
last week. I made it. ID, intent driven
2:24
development. And what this system does
2:26
is it allows the AI to be able to
2:29
understand and identify what your true
Intent-Driven Development & Behavior Model Oracle
2:31
intentions are so that it can then align
2:33
the system with it. And you see what's
2:35
happened is I had Phamine uh had given
2:39
it a task. It coded some stuff out. It
2:41
went to the security reviewer. The
2:42
security reviewer reviewed the stuff and
2:44
the security reviewer came back and
2:46
said, "We got some uh a couple of
2:48
security issues here." So I put it back
2:50
into Fairmind. Boom. Fairmind updated
2:53
the security stuff. So now it's going to
2:55
give me a completion prompt, right? And
2:58
so then what I'm going to do
3:00
is then I'm going to go back to the
3:03
orchestrator and be like, "Yo,
3:04
orchestrator, that job that you gave the
3:06
coder, you know what I'm saying? That
3:07
job, it's done, right? Here's the full
3:10
summary. All 12 tasks are passing. All
3:13
right." The orchestrator says, "Cool.
3:15
What do I need to do next?" And then the
3:17
orchestrator assigns the next task. And
Security Review, Optimization, and Chaos Testing
3:20
so what the orchestrator is doing now is
3:22
it's assigning a task to the optimizer.
3:24
So after cloud codes did its initial
3:27
coding to pass the test, it went to a
3:29
security reviewer. It went and fixed any
3:31
security issues it had. Now it's going
3:33
to an optimizer. It's going to optimize
3:35
the code further. After this, it's going
3:37
to go to a chaos engineer where it's
3:39
going to try to break the entire system
3:41
and then see if the system can holds up
3:43
under these insane constraints. You
3:45
know, it has edge case synthesizers, all
3:47
this stuff. You know, the code that gets
3:49
generated from this is insanely good,
3:52
right? And the only requirements to be
3:56
able to use Fairmind is you need to be
4:00
this is this is this is a system that is
4:01
designed to do end toend software
4:03
development and you must be age seven or
4:06
older and you must be able to copy and
How Anyone (Age 7+) Can Use Pheromind
4:10
paste. And so if you don't meet the
4:12
requirements to use Fairmind, do not
4:14
reach out to me. I do not want to talk
4:15
to you. Okay? But if you do meet those
4:18
requirements then please join the fair
4:21
of mind community and fair of mind I've
4:25
given away this ultimate power for free
4:29
and I am curious to see what you all can
4:32
build with it. It is it this gives you
4:35
the power to whatever you dream up,
4:37
whatever you think you've ever wanted to
4:39
do in your life to build.
4:41
This does it with zero almost zero
4:44
effort involved.
4:47
Amazing. So, what you're going to see
4:49
here is the optimizer came back. It said
4:51
these are the areas that could use some
4:53
more um optimization. Um you know, this
Real Demo: Copy-Paste Workflow in Action
4:56
query is efficient or it could be yada.
4:59
Okay, so it looks like the optimization
5:01
was good. um it didn't think it needed
5:03
to make any changes to the how the code
5:05
was optimized. So now what it's done is
5:07
it's given the chaos engineer a task and
5:09
the chaos engineer your job is to try to
5:12
break the system. You know throw up
5:14
these 401 these 429 these 503 errors and
5:17
let's see how the system responds and
5:19
let's make sure that the nothing can
5:21
break the systems can you know can break
5:23
the system. Um so that's what we're
5:25
doing here. So, I'm going to throw it
5:26
into cloud code and I'm like, "All
5:27
right, cloud code. Set up the chaos
5:29
test. Pass them." This comes back. I put
5:31
it back into the orchestrator. It's like
5:33
boom. All right, move on. Next step of
5:36
the process. And that's it. This is as
Free Community & What You Can Build Next
5:40
difficult as it gets. You take the
5:42
prompt, you paste it in, it finishes the
5:44
job, you take the output, you put it
5:46
back into Fairmind, and you just do this
5:49
repeatedly. Fairmind just manages the
5:50
whole process autonomously
5:53
automatically. You just let it. You just
5:56
follow along. Copy paste. Copy paste.
6:00
Copy paste. This is why I mean this is a
6:03
difficult thing. This is why you must be
6:06
7 years old or older and able to read in
6:09
order to use Fairmind. It's a very
6:11
complicated system, right? But if you
6:14
meet those requirements, then you can
6:16
build whatever you can dream up. Join
6:19
the Fairmind community.